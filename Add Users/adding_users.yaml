---

- hosts: all
  become: true
  pre_tasks:
# Pre Tasks - to check the update on each VM.
  - name: install updates (RedHat)    # Name to display when the playbook runs
    tags: always
    yum:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "RedHat"    # Where to run this section

  - name: install updates (Ubuntu)
    tags: always
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

# Add the user and make it Sudoer
- hosts: all
  become: true
  tasks:
  # User Defined
  - name: create alpha user
    tags: always
    user:
      name: alpha
      group: root
  # User key added
  - name: add ssh key for alpha
    tags: always
    authorized_key:
      user: alpha
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILYzaKsIpIxMxypOkNommg53oSWCkZhxWa+40NYVpn6T ansible"
  # Make alpha sudo/root
  - name: add sudoers file for alpha
    copy: 
      src: sudoer_alpha
      dest: /etc/sudoers.d/alpha
      owner: root
      group: root
      mode: 0440

# Installing Terraform on current workstation
- hosts: workstations
  become: true
  tasks:

  - name: install unzip
    package:
      name: unzip

  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root

# Tasks based on groups defined in inventory
- hosts: web_servers
  become: true
  tasks:

  - name: install httpd package (RedHat)
    tags: apache,rhel,httpd
    yum:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "RedHat"

   # Start httpd service on RHEL
  - name: start and enable httpd (RedHat)
    tags: apache,centos,httpd
    service:
      name: httpd
      state: started
    when: ansible_distribution == "RedHat"

  - name: install apache2 package (Ubuntu)
    tags: apache,ubuntu,httpd
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution == "Ubuntu"

  # Copy file from a directory to other
  - name: copy default html file for site
    tags: apache,apache2,httpd
    copy: 
      src: default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

# Tasks based on groups defined in inventory
- hosts: db_servers
  become: true
  tasks:

  - name: install mariadb server package (RedHat)
    tags: rhel,db,mariadb
    yum:
      name: mariadb
      state: latest
    when: ansible_distribution == "RedHat"

  - name: install mariadb server
    tags: ubuntu,db,mariadb
    apt:
      name: mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"

# Tasks based on groups defined in inventory
- hosts: file_servers
  become: true
  tasks:

  - name: install samba package
    tags: samba
    package:
      name: samba
      state: latest